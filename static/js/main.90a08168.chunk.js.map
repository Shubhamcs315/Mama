{"version":3,"sources":["componentes/Alert.js","componentes/Navbar.js","componentes/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","className","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","cpitalize","msg","Navbar","mode","href","title","id","onClick","toggleMode1","toggleMode2","toggleMode3","toggleMode4","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","rows","value","backgroundColor","onChange","event","console","log","target","new1","showAlert","navigator","clipboard","writeText","k","split","v","i","length","filter","defaultProps","aboutText","App","DarkMode","setMode","setalert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.90a08168.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const cpitalize= (word)=>{\r\n        const lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n    <strong>{cpitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n  </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Navbar(props) {\r\n  \r\n  \r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/\">About</a>\r\n        </li>\r\n        \r\n        \r\n      </ul>\r\n      {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n      </form> */}\r\n      <div className=\"theme mx-2\" onClick={props.toggleMode1}> </div>\r\n      <div className=\"theme2 mx-2\" onClick={props.toggleMode2}></div>\r\n      <div className=\"theme3 mx-2\" onClick={props.toggleMode3}></div>\r\n      <div className=\"theme4 mx-2\"onClick={props.toggleMode4}></div>\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n  )\r\n}\r\nNavbar.propTypes={\r\n  title :PropTypes.string,\r\n  aboutText:PropTypes.string\r\n}\r\n Navbar.defaultProps={\r\n   title: \"textUtils\",\r\n   aboutText: \"shubham\"\r\n }","import React,{useState} from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const [text,setText]= useState(\"\");\r\n    const handleUpClick= ()=>{\r\n        // console.log(\"upper case clicked\"+text);\r\n        let new1 =text.toUpperCase();\r\n        setText(new1);\r\n        props.showAlert(\"Text converted to uppercase\",\"success\");\r\n    }\r\n    const handleLowClick= ()=>{\r\n        // console.log(\"upper case clicked\"+text);\r\n        let new1 =text.toLowerCase();\r\n        setText(new1);\r\n        props.showAlert(\"Text converted to Lowercase\",\"success\");\r\n    }\r\n    const handleOnChange= (event)=>{\r\n        console.log(\"on change\")\r\n        // setText(\"you have clicked on handled Click\");\r\n        setText(event.target.value);\r\n    }\r\n    const handleClear=()=>{\r\n      setText('');\r\n      props.showAlert(\"Text Cleared\",\"warning\");\r\n    }\r\n    const handleUpCopy=()=>{\r\n      navigator.clipboard.writeText(text);\r\n      props.showAlert(\"Text copied succesfully\",\"success\");\r\n    }\r\n    const handleExtra=()=>{\r\n      let k= text.split(' ');\r\n      let v=\"\";\r\n      for(let i=0;i<k.length;i++){\r\n        if(k[i]===\"\"){\r\n          continue;\r\n        }\r\n        else{\r\n          v=v+k[i]+\" \";\r\n        }\r\n      } \r\n      setText(v);\r\n      props.showAlert(\"Extra spaces removed\",\"primary\");\r\n    }\r\n    \r\n  return (\r\n <>\r\n    <div className=\"container\" style={{color:props.mode==='dark'?'white':'grey'}}>\r\n        <h1 >{props.heading}</h1>\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"myBox\" className=\"myBox\">\r\n          {/* <b>{props.head}</b> */}\r\n        </label>\r\n        <textarea\r\n          className=\"form-control\"\r\n          id=\"exampleFormControlTextarea1\"\r\n          rows=\"8\"\r\n          value={text}\r\n          style={{backgroundColor:props.mode==='dark'?'grey':'white',color:props.mode==='dark'?'white':'grey' }}\r\n          onChange={handleOnChange}\r\n        ></textarea>\r\n        <button className='btn btn-primary mx-2' onClick={handleUpClick} >Convert to UpperCase</button>\r\n        <button className='btn btn-primary mx-2' onClick={handleLowClick} >Convert to LoweCase</button>\r\n        <button className='btn btn-primary mx-2' onClick={handleClear} >Clear</button>\r\n        <button className='btn btn-primary mx-2 te' onClick={handleUpCopy} >Copy</button>\r\n        <button className='btn btn-primary mx-2 te' onClick={handleExtra} >Extra Space</button>\r\n      </div>\r\n    </div>\r\n    <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'grey'}}>\r\n      <h1>YOUR TEXT SUMMARY</h1>\r\n      <p> {text.split(' ').filter(function(value){\r\n        return value !==\"\";\r\n      }).length} Words, {text.length} Charachters</p>\r\n      <p>{0.008 *text.split(' ').length} Minutes to read</p>\r\n      <h2>Preview</h2>\r\n      <p>{text.length>0?text:\"Enter Somthing to preview here\"}</p>\r\n    </div>\r\n </>\r\n  );\r\n}\r\n","\nimport { useState } from 'react';\nimport './App.css';\nimport Alert from './componentes/Alert';\n// import About from './componentes/About';\nimport Navbar from './componentes/Navbar';\nimport TextForm from './componentes/TextForm';\n// import {BrowserRouter as Router,Routes,Route} from 'react-router-dom';\n// import Error from './componentes/Error';\nfunction App() {\n  const [DarkMode, setMode] = useState('light');\n  const [alert, setalert] = useState(null);\n  const showAlert=(message,type)=>{\n    setalert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setalert(null);\n    }, 2000);\n  }\n  let toggleMode1=()=>{\n   setMode('blue');\n   document.body.style.backgroundColor=\"blue\";\n  }\n  let toggleMode2=()=>{\n    setMode('yellow');\n   document.body.style.backgroundColor=\"yellow\";\n  }\n  let toggleMode3=()=>{\n    setMode('rgb(51, 154, 223)');\n   document.body.style.backgroundColor=\"rgb(51, 154, 223)\";\n  }\n  let toggleMode4=()=>{\n    setMode('rgb(206, 70, 199)');\n   document.body.style.backgroundColor=\"rgb(206, 70, 199)\";\n  }\n  let toggleMode=()=>{\n    if(DarkMode==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor='#042743';\n      showAlert(\"Dark mode enabled\",\"success\");\n      document.title='Textutils-DarkMode';\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light mode enabled\",\"success\");\n      document.title='Textutils-LightMode';\n    }\n  }\n  return (\n    <>\n    <Navbar title=\"Textutils2\" aboutText=\"TEXT\" mode={DarkMode} toggleMode={toggleMode} toggleMode1={toggleMode1} toggleMode2={toggleMode2} toggleMode3={toggleMode3} toggleMode4={toggleMode4}/>\n    <Alert alert={alert}/>\n    <TextForm  heading=\"Enter The Text To Analyisze\" mode={DarkMode} showAlert={showAlert}/>\n    {/* <Router> */}\n      {/* <Routes> */}\n        {/* <Route exect path='/' element={<TextForm  heading=\"Enter The Text To Analyisze\" mode={DarkMode} showAlert={showAlert}/>}/> */}\n        {/* <Route exect path='/index.html' element={<TextForm  heading=\"Enter The Text To Analyisze\" mode={DarkMode} showAlert={showAlert}/>}/> */}\n        {/* <Route exect path='/About' element={<About/>}/> */}\n        {/* <Route exect path='*' element={<Error/>}/> */}\n      {/* </Routes> */}\n    {/* </Router> */}\n    \n    {/* <div className=\"container my-3\">\n      <TextForm  heading=\"Enter The Text To Analyisze\" mode={DarkMode} showAlert={showAlert}/>\n    <About/>\n    </div> */}\n    \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}